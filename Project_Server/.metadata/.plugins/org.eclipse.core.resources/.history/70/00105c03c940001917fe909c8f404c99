package com.company.movies.movies.movies.director.generated;

import com.company.movies.movies.movies.director.Director;
import com.speedment.common.annotation.GeneratedCode;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movies.movies.movies.director.Director}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDirectorImpl implements Director {
    
    private String directorId;
    private String dirfname;
    private String dirsname;
    
    protected GeneratedDirectorImpl() {
        
    }
    
    @Override
    public String getDirectorId() {
        return directorId;
    }
    
    @Override
    public String getDirfname() {
        return dirfname;
    }
    
    @Override
    public String getDirsname() {
        return dirsname;
    }
    
    @Override
    public Director setDirectorId(String directorId) {
        this.directorId = directorId;
        return this;
    }
    
    @Override
    public Director setDirfname(String dirfname) {
        this.dirfname = dirfname;
        return this;
    }
    
    @Override
    public Director setDirsname(String dirsname) {
        this.dirsname = dirsname;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("directorId = " + Objects.toString(getDirectorId()));
        sj.add("dirfname = "   + Objects.toString(getDirfname()));
        sj.add("dirsname = "   + Objects.toString(getDirsname()));
        return "DirectorImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Director)) { return false; }
        final Director thatDirector = (Director)that;
        if (!Objects.equals(this.getDirectorId(), thatDirector.getDirectorId())) {return false; }
        if (!Objects.equals(this.getDirfname(), thatDirector.getDirfname())) {return false; }
        if (!Objects.equals(this.getDirsname(), thatDirector.getDirsname())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getDirectorId());
        hash = 31 * hash + Objects.hashCode(getDirfname());
        hash = 31 * hash + Objects.hashCode(getDirsname());
        return hash;
    }
}