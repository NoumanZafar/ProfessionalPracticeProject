package com.company.movies.database.movies.movie_genre.generated;

import com.company.movies.database.movies.genre.Genre;
import com.company.movies.database.movies.movie.Movie;
import com.company.movies.database.movies.movie_genre.MovieGenre;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movies.database.movies.movie_genre.MovieGenre}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieGenreImpl implements MovieGenre {
    
    private String movieId;
    private String genreId;
    
    protected GeneratedMovieGenreImpl() {
        
    }
    
    @Override
    public String getMovieId() {
        return movieId;
    }
    
    @Override
    public String getGenreId() {
        return genreId;
    }
    
    @Override
    public MovieGenre setMovieId(String movieId) {
        this.movieId = movieId;
        return this;
    }
    
    @Override
    public MovieGenre setGenreId(String genreId) {
        this.genreId = genreId;
        return this;
    }
    
    @Override
    public Movie findMovieId(Manager<Movie> foreignManager) {
        return foreignManager.stream().filter(Movie.MOVIE_ID.equal(getMovieId())).findAny().orElse(null);
    }
    
    @Override
    public Genre findGenreId(Manager<Genre> foreignManager) {
        return foreignManager.stream().filter(Genre.GENRE_ID.equal(getGenreId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("movieId = " + Objects.toString(getMovieId()));
        sj.add("genreId = " + Objects.toString(getGenreId()));
        return "MovieGenreImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof MovieGenre)) { return false; }
        final MovieGenre thatMovieGenre = (MovieGenre)that;
        if (!Objects.equals(this.getMovieId(), thatMovieGenre.getMovieId())) {return false; }
        if (!Objects.equals(this.getGenreId(), thatMovieGenre.getGenreId())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getMovieId());
        hash = 31 * hash + Objects.hashCode(getGenreId());
        return hash;
    }
}