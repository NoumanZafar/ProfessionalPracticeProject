package com.company.movies.database.movies.movie_actor.generated;

import com.company.movies.database.movies.movie_actor.MovieActor;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.movies.database.movies.movie_actor.MovieActor} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieActorManagerImpl extends AbstractManager<MovieActor> implements GeneratedMovieActorManager {
    
    private final TableIdentifier<MovieActor> tableIdentifier;
    
    protected GeneratedMovieActorManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("database", "movies", "movie_actor");
    }
    
    @Override
    public TableIdentifier<MovieActor> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<MovieActor>> fields() {
        return Stream.of(
            MovieActor.ACTOR_ID,
            MovieActor.MOVIE_ID
        );
    }
    
    @Override
    public Stream<Field<MovieActor>> primaryKeyFields() {
        return Stream.of(
            MovieActor.ACTOR_ID,
            MovieActor.MOVIE_ID
        );
    }
}